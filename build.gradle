plugins {
    id "com.jfrog.bintray" version "1.1"
}

apply plugin: "scala"
apply plugin: "maven-publish"
sourceCompatibility = 1.7
version = "0.9.0-SNAPSHOT"

def bintrayVersion = {
    if (version.endsWith('-SNAPSHOT')) {
        java.text.SimpleDateFormat format = new java.text.SimpleDateFormat('yyMMddHHmm')
        format.setCalendar(Calendar.getInstance(TimeZone.getTimeZone('UTC')))
        return version.replace('SNAPSHOT', "b" + format.format(new Date()))
    } else {
        return version
    }
}()

task wrapper(type: Wrapper) {
    gradleVersion = "2.3"
}

repositories {
    mavenCentral()
    maven {
        url "http://dl.bintray.com/nilskp/maven" 
    }
}

jar {
    baseName = "ulysses_2.11"
    manifest {
        attributes "Implementation-Title": "ulysses", "Implementation-Version": version
    }
}

task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allScala
}
task docsJar(type: Jar, dependsOn: scaladoc) {
    classifier "docs"
    from scaladoc.destinationDir
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId 'nilskp'
            artifactId jar.baseName
            version bintrayVersion

            from components.java
            artifact sourceJar
            artifact docsJar
            pom.withXml { xml ->
                xml.asNode().dependencies.dependency.findAll{ ! ['boon','mail'].contains(it.artifactId.text()) }.each { dep ->
                    dep.scope[0].value = "provided"
                }
            }
        }
    }
}

bintray {
    user = System.properties.bintrayUser ?: "n/a"
    key = System.properties.bintrayApiKey ?: "n/a"
    dryRun = (user == "n/a" || key == "n/a")
    publish = !dryRun
    publications = ['maven']
    pkg {
        repo = "maven"
        name = "Ulysses"
        version {
            name = bintrayVersion
        }
    }
}

dependencies {
    testCompile "junit:junit:4.11"
    testCompile "org.mockito:mockito-all:1.10.19"

    //compile "nilskp:scuff_2.11:0.1.5-b201504121556"
    compile "org.scala-lang:scala-library:2.11.6"
    compile "org.mongodb:mongodb-driver-async:3.0.0"
    compile "com.datastax.cassandra:cassandra-driver-core:2.1.4"
    compile "redis.clients:jedis:2.7.0"
}

compileScala {
    scalaCompileOptions.additionalParameters = [
        "-feature", "-optimise","–unchecked", "-deprecation","–explaintypes",
        "–Xdisable-assertions", //"-Xfatal-warnings",
        "-Ybackend:GenBCode", "-Yclosure-elim",
    ]
}

compileTestScala {
    scalaCompileOptions.additionalParameters = [
        "-nowarn",
        "-Xcheckinit", "-optimise",
        "-Ybackend:GenBCode", "-Yclosure-elim",
    ]
}
